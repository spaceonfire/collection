#!/usr/bin/env php
<?php

/*
 * php bin/coverage-badge <filename> <gist-id> <gist-token>
 */

try {
	$arguments = $argv;
	array_shift($arguments);

	[$filename, $gistId, $gistToken] = $arguments + [null, null, null];

	if ($filename === null) {
		throw new InvalidArgumentException('Badge filename not specified');
	}
	if ($gistId === null) {
		throw new InvalidArgumentException('Gist id not specified');
	}
	if ($gistToken === null) {
		throw new InvalidArgumentException('Gist token not specified');
	}

	$filename = str_replace(['/', '_'], '-', $filename);

	$coverageFile = dirname(__DIR__) . '/build/coverage.txt';

	if (!file_exists($coverageFile)) {
		throw new RuntimeException(sprintf('Text coverage report not found at %s', $coverageFile));
	}

	$coverageFileContents = file_get_contents($coverageFile);

	preg_match('/^\s+Lines:\s+(\d+\.\d+)\%/m', $coverageFileContents, $matches);

	if (isset($matches[1]) && is_numeric($matches[1])) {
		$coverage = (float)$matches[1];

		/** @noinspection TypeUnsafeComparisonInspection */
		$message = sprintf(
			'%s%%',
			(string)$coverage == (int)$coverage
				? (string)(int)$coverage
				: number_format($coverage, 1)
		);

		$color = 'red';

		if ($coverage >= 30) {
			$color = 'orange';
		}
		if ($coverage >= 50) {
			$color = 'yellow';
		}
		if ($coverage >= 65) {
			$color = 'yellowgreen';
		}
		if ($coverage >= 80) {
			$color = 'green';
		}
		if ($coverage >= 95) {
			$color = 'brightgreen';
		}
	} else {
		$message = 'N/A';
		$color = 'lightgrey';
	}

	$badgeInfo = [
		'schemaVersion' => 1,
		'label' => 'coverage',
		'message' => $message,
		'color' => $color,
	];

	$postFields = json_encode([
		'files' => [
			$filename => [
				'content' => json_encode($badgeInfo),
			],
		],
	]);

	$curl = curl_init();

	curl_setopt_array($curl, [
		CURLOPT_URL => sprintf('https://api.github.com/gists/%s', $gistId),
		CURLOPT_RETURNTRANSFER => true,
		CURLOPT_ENCODING => '',
		CURLOPT_MAXREDIRS => 10,
		CURLOPT_TIMEOUT => 30,
		CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
		CURLOPT_CUSTOMREQUEST => 'PATCH',
		CURLOPT_POSTFIELDS => $postFields,
		CURLOPT_HTTPHEADER => [
			'accept: application/vnd.github.v3+json',
			sprintf('authorization: Bearer %s', $gistToken),
			'content-type: application/json',
			'user-agent: curl',
		],
	]);

	$response = curl_exec($curl);
	$json = json_decode($response, true);
	$err = curl_error($curl);
	$httpCode = curl_getinfo($curl, CURLINFO_RESPONSE_CODE);

	curl_close($curl);

	if ($err) {
		throw new RuntimeException(sprintf('Curl error: %s', $err));
	}

	if ($httpCode > 399) {
		$exceptionMessage = sprintf('Request error: %s', $json['message'] ?? $response);

		if (isset($json['errors'])) {
			$exceptionMessage .= PHP_EOL . PHP_EOL . 'Errors: ' . json_encode($json['errors'], JSON_PRETTY_PRINT);
		}

		throw new RuntimeException($exceptionMessage);
	}

	echo 'Coverage badge info uploaded' . PHP_EOL;
	exit(0);
} catch (Throwable $e) {
	fwrite(STDERR, $e->getMessage() . PHP_EOL);
	exit(1);
}
