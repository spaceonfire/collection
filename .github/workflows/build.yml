name: Build Pipeline

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  composer:
    runs-on: ubuntu-latest
    container: spaceonfire/nginx-php-fpm:latest-7.2
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Validate composer.json
        run: composer validate

  codestyle:
    runs-on: ubuntu-latest
    container: spaceonfire/nginx-php-fpm:latest-7.2
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Cache Composer packages
        id: composer-cache
        uses: actions/cache@v2
        env:
          COMPOSER_CACHE_KEY: 'composer-7.2'
        with:
          path: vendor
          key: ${{ env.COMPOSER_CACHE_KEY }}
          restore-keys: ${{ env.COMPOSER_CACHE_KEY }}

      - name: Install dependencies
        if: steps.composer-cache.outputs.cache-hit != 'true'
        run: composer install --prefer-dist --no-progress --no-suggest

      - name: Check coding standard
        run: vendor/bin/ecs check --no-progress-bar --no-interaction

  phpstan:
    runs-on: ubuntu-latest
    container: spaceonfire/nginx-php-fpm:latest-7.2
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Cache Composer packages
        id: composer-cache
        uses: actions/cache@v2
        env:
          COMPOSER_CACHE_KEY: 'composer-7.2'
        with:
          path: vendor
          key: ${{ env.COMPOSER_CACHE_KEY }}
          restore-keys: ${{ env.COMPOSER_CACHE_KEY }}

      - name: Install dependencies
        if: steps.composer-cache.outputs.cache-hit != 'true'
        run: composer install --prefer-dist --no-progress --no-suggest

      - name: PHPStan
        run: vendor/bin/phpstan analyse --no-progress --no-interaction

  phpunit:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        php-version:
          - '7.2'
          - '7.3'
          - '7.4'
    container: spaceonfire/nginx-php-fpm:latest-${{ matrix.php-version }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Cache Composer packages
        id: composer-cache
        uses: actions/cache@v2
        env:
          COMPOSER_CACHE_KEY: 'composer-${{ matrix.php-version }}'
        with:
          path: vendor
          key: ${{ env.COMPOSER_CACHE_KEY }}
          restore-keys: ${{ env.COMPOSER_CACHE_KEY }}

      - name: Install dependencies
        if: steps.composer-cache.outputs.cache-hit != 'true'
        run: composer install --prefer-dist --no-progress --no-suggest

      - name: PHPUnit
        run: |
          apk update
          docker-php-ext-enable xdebug
          vendor/bin/phpunit --no-interaction
          cat build/coverage.txt

      - name: PHPUnit Artifacts
        uses: actions/upload-artifact@v2
        with:
          name: phpunit-${{ matrix.php-version }}
          path: build/

      - name: Generate coverage badge
        if: matrix.php-version == '7.2' && github.event_name == 'push' && github.ref == 'refs/heads/master'
        run: php bin/coverage-badge ${{ github.repository }}.json ${{ secrets.COVERAGE_GIST_ID }} ${{ secrets.COVERAGE_GIST_TOKEN }}
